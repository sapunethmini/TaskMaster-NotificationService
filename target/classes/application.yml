server:
  port: 8083

spring:
  application:
    name: notification-service

  # Database Configuration
  datasource:
    url: jdbc:h2:mem:notificationdb
    driverClassName: org.h2.Driver
    username: sa
    password: password

  h2:
    console:
      enabled: true

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  # Email Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME:saragamage111@gmail.com}
    password: ${EMAIL_PASSWORD:Kusum2000}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        # FIXED: Added producer's package to trusted packages
        spring.json.trusted.packages: "java.util,java.lang,com.taskapp.notification.model,org.example.model"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Eureka Configuration - FIXED: Disabled Eureka to resolve connection issues
eureka:
  client:
    enabled: false
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://localhost:8762/eureka/
  instance:
    hostname: localhost

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics
  endpoint:
    health:
      show-details: always

# Logging
logging:
  level:
    com.taskapp.notification: DEBUG
    org.springframework.kafka: INFO